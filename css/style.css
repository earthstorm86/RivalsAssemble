/* Marvel Rivals Roll‑A‑Roller Styles */

:root {
  /* New Palette */
  --palette-cyan: #2BDAFF;
  --palette-orange-primary: #FF8F2A;
  --palette-red: #FF3008;
  --palette-orange-secondary: #FF8E2E;

  /* Light Mode Base */
  --bg: #f4f4f8; /* Light grey background */
  --text-main: #1e1e1e; /* Dark text */
  --card-bg: #ffffff; /* White cards */
  --border-color: #d0d0d8; /* Light border */
  --input-bg: #ffffff;
  --input-border: #cccccc;
  --input-text: #1e1e1e;

  /* UI Elements - Light Mode (using palette) */
  --btn-primary-bg: var(--palette-orange-primary);
  --btn-primary-text: #ffffff;
  --btn-secondary-bg: var(--palette-cyan);
  --btn-secondary-text: #1e1e1e; /* Dark text on light cyan */
  --btn-danger-bg: var(--palette-red);
  --btn-danger-text: #ffffff;
  
  --link-color: var(--palette-orange-primary);
  --focus-ring-color: var(--palette-cyan);
  --icon-color: var(--palette-orange-secondary);
  --text-muted: #555555;

  /* Role Colors (for overlays, define more opaquely here) */
  --role-strategist-overlay: rgb(17, 215, 194,0.75); /* Cyan */
  --role-vanguard-overlay: rgba(153, 102, 204, 0.75); /* Amethyst/Purple */
  --role-duellist-overlay: rgba(255, 48, 8, 0.75);    /* Red */
  --role-flex-overlay: rgba(60, 179, 113, 0.75);      /* Green */
}

body.dark-mode {
  /* Dark Mode Base */
  --bg: #1e1e1e;
  --text-main: #f3f3f3; /* Light text */
  --card-bg: #2c2c2c; /* Dark grey cards */
  --border-color: #444444; /* Darker border */
  --input-bg: #3a3a3a;
  --input-border: #555555;
  --input-text: #e0e0e0;

  /* UI Elements - Dark Mode (using palette directly) */
  /* Button bg/text colors remain the same from :root as per user request */
  /* --btn-primary-bg: var(--palette-orange-primary); */
  /* --btn-primary-text: #ffffff; */
  /* --btn-secondary-bg: var(--palette-cyan); */
  /* --btn-secondary-text: #1e1e1e; */ /* Check contrast for cyan in dark mode */
  /* --btn-danger-bg: var(--palette-red); */
  /* --btn-danger-text: #ffffff; */

  --link-color: var(--palette-orange-primary);
  --focus-ring-color: var(--palette-cyan);
  --icon-color: var(--palette-orange-secondary);
  --text-muted: #e4e4e4;

  /* Role Overlays remain the same, their appearance will change due to --card-bg difference */
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-size: clamp(14px, 2vw, 18px);
}

body {
  font-family: system-ui, sans-serif;
  background: #1e1e1e;
  color: var(--text-main);
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: clamp(0.5rem, 2vw, 1.5rem);
  transition: background 0.3s, color 0.3s;
}

img {
  display: block;
  max-width: 100%;
}

.logo {
  margin-bottom: clamp(0.8rem, 2vw, 1.5rem);
}
.logo img {
  width: 150px;
  height: auto;
}

.main {
  display: flex;
  gap: clamp(1rem, 4vw, 2.5rem);
  flex-wrap: wrap;
  justify-content: center;
  width: 100%;
  max-width: 1024px;
}

.player-panel {
  background: var(--card-bg);
  border: 1px solid var(--border-color); /* Updated border */
  border-radius: 8px;
  padding: clamp(0.8rem, 2vw, 1.2rem);
  box-shadow: 0 2px 6px rgba(0,0,0,0.05); /* Softer shadow */
  flex: 1 1 min(100%, 600px);
  min-width: 0;
}

.panel h2 {
  text-align: center;
  margin-bottom: clamp(0.6rem, 1.5vw, 1rem);
  font-size: clamp(1rem, 2.4vw, 1.3rem);
  color: var(--text-main); /* Ensure header uses main text color */
}

.player-list {
  list-style: none;
  display: flex;
  flex-direction: column;
  gap: 0.6rem;
  position: relative; /* This creates a stacking context */
}

.player-item {
  display: grid;
  grid-template-columns: 30px 3.3fr 2.3fr 40px; 
  align-items: center;
  gap: 0.5rem;
  margin-bottom: .5rem;
  padding: .5rem;
  background: var(--card-bg); /* Use card background */
  border: 1px solid var(--border-color); /* Use theme border */
  border-radius: .3rem;
  transition: transform 0.5s ease-in-out, box-shadow 0.3s ease-in-out;
  overflow: visible; /* Set to visible to prevent dropdown clipping */
  position: relative; /* Ensure it forms a stacking context for z-indexed children if needed */
}

/* Role-specific overlays - updated to use new variables */
.player-item.role-overlay-strategist {
  box-shadow: inset 0 0 0 1000px var(--role-strategist-overlay);
}
.player-item.role-overlay-vanguard {
  box-shadow: inset 0 0 0 1000px var(--role-vanguard-overlay);
}
.player-item.role-overlay-duellist {
  box-shadow: inset 0 0 0 1000px var(--role-duellist-overlay);
}
.player-item.role-overlay-flex {
  box-shadow: inset 0 0 0 1000px var(--role-flex-overlay);
}

/* Player Name Input common styles */
.player-item .player-name-wrapper input.player-name {
  width: 100%; 
  min-width: 0; 
  padding: 0.5rem; 
  border: 1px solid var(--input-border);
  border-radius: .3rem; 
  background: var(--input-bg); 
  color: var(--input-text); 
  font-size: 1rem;
  box-shadow: none;
  outline: none;
  transition: border-color 0.2s, box-shadow 0.2s;
  height: auto; 
  box-sizing: border-box;
  flex-grow: 1;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.player-item .player-name-wrapper input.player-name:focus {
  border-color: var(--focus-ring-color);
  box-shadow: 0 0 0 2px color-mix(in srgb, var(--focus-ring-color) 30%, transparent);
}

/* Remove button */
.player-item .remove {
  flex-shrink: 0; 
  width: 30px; 
  height: 30px;
  padding: 0;
  display: flex; 
  justify-content: center;
  align-items: center;
  background: transparent;
  color: var(--palette-red); /* Use palette red */
  font-weight: 900;
  font-size: 1.15rem;
  border: none;
  cursor: pointer;
  line-height: 1;
  opacity: 0.7;
  transition: opacity 0.2s;
}
.player-item .remove:hover {
  opacity: 1;
}

.player-item .remove.disabled {
  opacity: 0;
  cursor: not-allowed;
  visibility: hidden;
}

/* Role Info container (icon, name, hero) */
.player-item .role-info {
  display: flex;
  align-items: center;
  gap: 0.3rem; 
  min-width: 140px; 
  justify-content: flex-start; 
  flex-shrink: 1;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.player-item .role-icon {
  flex-shrink: 0; 
  width: 24px; 
  height: 24px;
  margin-right: 3px; 
  display: none; 
  /* filter: drop-shadow(0 0 2px rgba(70, 70, 70, 0.85));  Consider removing/adjusting for new palette */
  object-fit: contain;
}

/* Invert role icon color in dark mode */
body.dark-mode .player-item .role-icon {
    filter: invert(100%);
}

.player-item .role-name {
  flex-shrink: 0; 
  font-size: 12px; 
  font-weight: bold; 
  white-space: nowrap; 
  color: var(--text-main); /* Use main text color */
}

.player-item .suggested-hero {
  font-size: 12px;
  color: var(--text-muted); /* Use muted text color */
  white-space: normal; 
  line-height: 1.2; 
  overflow-wrap: break-word; 
}

/* Reroll button (individual) */
.player-item .roll {
  flex-shrink: 0; 
  width: 38px; 
  height: 38px;
  padding: 0;
  display: flex; 
  justify-content: center;
  align-items: center;
  font-size: 1.5rem; 
  background: var(--btn-secondary-bg); /* Use secondary button style */
  color: var(--btn-secondary-text);
  font-weight: 700;
  cursor: pointer;
  border: none;
  border-radius: 50%;
  transition: background 0.2s, transform 0.1s;
  box-shadow: 0 1px 3px rgba(0,0,0,0.1);
}

.player-item .roll svg {
    width: 1.2em; 
    height: 1.2em; 
    /* fill: currentColor; */ /* Removed - fill is set in SVG */
    transition: transform 0.2s ease-in-out; 
}

.player-item .roll svg circle {
    fill: black !important; /* Force black fill for dots */
}

/* Force black fill for the SVG background rectangle */
.player-item .roll svg rect {
    fill: rgb(255, 255, 255) !important; /* Force black fill for background */
}

.player-item .roll:hover:not(.disabled) svg {
    animation: shake-dice 0.5s ease-in-out 2; /* Run animation 2 times */
}

@keyframes shake-dice {
  0% { transform: rotate(0deg); }
  25% { transform: rotate(-10deg); }
  50% { transform: rotate(0deg); }
  75% { transform: rotate(10deg); }
  100% { transform: rotate(0deg); }
}

.player-item .roll:active {
  transform: scale(0.95);
  /* Ensure active state doesn't conflict with hover animation */
  animation: none; 
}

.player-item .roll.disabled { /* General disabled style for roll buttons */
  opacity: 0.4 !important; /* Ensure it overrides */
  background: color-mix(in srgb, var(--btn-secondary-bg) 50%, var(--card-bg)) !important; /* Muted version */
  color: color-mix(in srgb, var(--btn-secondary-text) 50%, var(--card-bg)) !important;
  cursor: not-allowed !important;
  transform: none !important;
}


.role { /* This class seems unused for player items, might be general */
  display: flex;
  align-items: center;
  justify-content: flex-start;
  gap: 0.5rem;
  width: 140px;
  font-weight: 700;
  font-size: 1rem;
  min-width: 0;
}

.role-icon { /* General role icon, if used outside player items */
  display: block;
  width: clamp(28px, 4.5vw, 36px);
  height: clamp(28px, 4.5vw, 36px);
  object-fit: contain;
  margin: 0;
}

.right-column-container {
  display: flex;
  flex-direction: column;
  gap: clamp(0.8rem, 2vw, 1.2rem); /* Space between roll button and options panel */
  flex: 1 1 min(100%, 300px); /* Example: Define how much space this column takes */
  min-width: 0; /* Prevent overflow issues */
}

/* General button styling in options panel */
.options-panel button,
.options-panel .min-adjust-btn { /* Included min-adjust-btn here */
  font-weight: 700;
  padding: 0.45em 0.8em;
  text-align: center;
  font-size: 0.75rem;
  line-height: 1.2;
  transition: transform 0.1s, background-color 0.2s;
  cursor: pointer;
  border-radius: 6px; /* Unified border radius */
  border: 1px solid transparent; /* For border consistency on hover/focus */
  display: inline-flex; /* For icon alignment */
  align-items: center; /* For icon alignment */
  justify-content: center; /* For icon alignment */
}

.options-panel button i.fas {
  margin-right: 0.5em; /* Space between icon and text */
}

#rollAllBtn{
  width: 100%;
  min-width: 100%;

}
/* Primary action buttons in options panel */
#addBtn, #rollAllBtn, #copyPlainTextBtn {
  background: var(--btn-primary-bg);
  color: var(--btn-primary-text);
  border-color: color-mix(in srgb, var(--btn-primary-bg) 80%, black);
}
#addBtn:hover:not(.disabled), #rollAllBtn:hover:not(.disabled), #copyPlainTextBtn:hover:not(.disabled) {
  background: color-mix(in srgb, var(--btn-primary-bg) 85%, black);
  transform: translateY(-1px);
}

/* Dark mode toggle button - secondary style */
#darkBtn {
  background: var(--btn-secondary-bg);
  color: var(--btn-secondary-text);
  border-color: color-mix(in srgb, var(--btn-secondary-bg) 80%, black);
}
#darkBtn:hover {
  background: color-mix(in srgb, var(--btn-secondary-bg) 85%, #1e1e1e); /* Mix with dark for hover if text is dark */
  transform: translateY(-1px);
}


.disabled { /* General disabled state for options panel buttons */
  opacity: 0.5 !important;
  cursor: not-allowed !important;
  transform: none !important;
  background: color-mix(in srgb, var(--btn-primary-bg) 40%, var(--card-bg)) !important; /* Muted for primary */
  color: color-mix(in srgb, var(--btn-primary-text) 60%, var(--card-bg)) !important;
}
#darkBtn.disabled { /* Specific if needed, but general should cover */
   background: color-mix(in srgb, var(--btn-secondary-bg) 40%, var(--card-bg)) !important;
   color: color-mix(in srgb, var(--btn-secondary-text) 60%, var(--card-bg)) !important;
}


.options-panel label { /* For checkbox labels etc */
  background: none;
  color: var(--text-main);
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.45em 0; /* Align with button padding if used similarly */
  font-weight: normal; /* Labels are usually not bold by default */
}

.options-panel input[type="checkbox"] {
  margin: 0;
  transform: scale(1.1);
  accent-color: var(--palette-orange-primary); /* Use palette for checkbox color */
}

/* Min/Max input styling */
.min-inputs-grid .option-group {
  display: grid; /* Changed from flex */
  grid-template-columns: 40% auto auto auto; /* Label | Dec | Input | Inc */
  gap: 0.3rem; /* Reduced gap slightly */
  align-items: center;
  width: 100%; /* Ensure it takes full width of its parent grid cell in .min-inputs-grid */
  padding: 0.1rem 0; /* Reduced vertical padding */
  /* font-size: 13px; - Font size inherited or set on children */
}

.min-inputs-grid .option-group label { /* Label for min/max input */
  font-weight: normal; /* Was bold, making it normal for better fit */
  padding-right: 0.3rem; /* Add some space between label and first button */
  text-align: left;
  /* font-size: 13px; */
}

.min-inputs-grid .option-group input[type="number"] {
  padding: 0.3rem;
  text-align: center;
  border: 1px solid var(--input-border);
  background: var(--input-bg);
  color: var(--input-text);
  border-radius: 3px;
  /* width: 40px; - Let grid manage width */
  /* font-size: 13px; */
  -moz-appearance: textfield; /* Firefox */
}

/* Remove styling for the now-deleted .min-input-controls div if any exists */
/* (Assuming .min-input-controls was previously styled, check and remove) */

.min-inputs-grid .option-group input[type="number"]::-webkit-inner-spin-button,
.min-inputs-grid .option-group input[type="number"]::-webkit-outer-spin-button {
  /* ... existing code ... */
}

/* Min/Max adjust buttons */
.min-adjust-btn {
  width: 22px; 
  height: 22px;
  padding: 0;
  border: 1px solid var(--border-color);
  border-radius: 4px; 
  background-color: var(--input-bg); /* Match input bg for subtle look */
  color: var(--icon-color); 
  font-size: 12px; 
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  transition: background-color 0.1s ease, border-color 0.1s ease;
}
.min-adjust-btn:hover:not(:disabled) {
  background-color: color-mix(in srgb, var(--input-bg) 80%, var(--text-main));
  border-color: var(--focus-ring-color);
}
.min-adjust-btn:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  background-color: var(--input-bg); 
  color: var(--text-muted);
} 

/* Quick Populate Section */
.quick-populate-row {
  display: flex;
  flex-wrap: wrap;
  gap: 0.3rem; 
  justify-content: center;
  margin-top: 1rem; 
  padding: 0.5rem; 
  border-top: 1px solid var(--border-color); 
}
.quick-pop-btn {
  background: var(--palette-orange-secondary); /* Use a palette color */
  color: #ffffff; /* White text on this orange */
  border: none;
  border-radius: 4px; 
  padding: 0.3em 0.7em; 
  font-size: 0.85rem; 
  font-weight: 600; 
  cursor: pointer;
  transition: background 0.2s, transform 0.1s;
  margin-bottom: 0.1em;
}
.quick-pop-btn:hover:not(.used) {
  background: color-mix(in srgb, var(--palette-orange-secondary) 85%, black);
  transform: translateY(-1px);
}
.quick-pop-btn.used {
  background: color-mix(in srgb, var(--palette-orange-secondary) 40%, var(--card-bg)); 
  color: color-mix(in srgb, #ffffff 60%, var(--card-bg)); 
  cursor: not-allowed; 
  transform: none; 
}

/* Edit Names Button */
.edit-names-btn {
  background-color: var(--btn-secondary-bg); /* Use secondary button style */
  color: var(--btn-secondary-text);
  border: 1px solid color-mix(in srgb, var(--btn-secondary-bg) 80%, black);
  padding: 0.3em 0.6em; 
  border-radius: 4px; 
  cursor: pointer;
  font-size: 0.8rem; 
  margin-top: 0.8rem; 
  margin-left: auto; 
  margin-right: auto; 
  display: block; 
  max-width: 120px; 
  transition: background-color 0.2s;
}
.edit-names-btn:hover {
  background: color-mix(in srgb, var(--btn-secondary-bg) 85%, #1e1e1e);
}

/* Remove icon for quick pop names */
.quick-pop-btn .remove-name-icon {
  position: absolute;
  top: -7px; /* Adjusted position */
  right: -7px; /* Adjusted position */
  background: var(--palette-red); /* Use palette red */
  color: white;
  border-radius: 50%;
  width: 18px; /* Increased size */
  height: 18px; /* Increased size */
  font-size: 11px; /* Adjusted font size */
  font-weight: bold;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  border: 1px solid var(--border-color); /* Using theme border color */
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.2s, visibility 0.2s, transform 0.2s, background-color 0.2s, border-color 0.2s; /* Added transitions */
  line-height: 1;
  z-index: 2; /* Ensure it's above the button */
}
.quick-pop-btn-container.edit-mode .remove-name-icon {
    opacity: 0.4;
    visibility: visible;
}
.quick-pop-btn-container.edit-mode .remove-name-icon:hover {
    transform: scale(1.2);
    background: color-mix(in srgb, var(--palette-red) 80%, black); /* Darker red on hover */
    border-color: white; /* White border on hover */
    /* Add a subtle shadow? box-shadow: 0 1px 4px rgba(0,0,0,0.2); */
}

/* Quick pop button in edit mode */
.quick-pop-btn.edit-mode {
  border: 1px dashed var(--palette-orange-primary);
}

/* Player Name Input Dropdown */
.player-name-wrapper {
  position: relative; 
  display: flex; 
  width: 100%; 
}
.player-name-dropdown-arrow {
  flex-shrink: 0;
  width: 30px;
  padding: 0.5rem;
  border: 1px solid var(--input-border);
  border-left: none;
  background: var(--input-bg);
  color: var(--icon-color);
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  border-top-right-radius: .3rem;
  border-bottom-right-radius: .3rem;
  font-size: 0.8rem;
  transition: background-color 0.2s;
}
.player-name-dropdown-arrow:hover {
  background: color-mix(in srgb, var(--input-bg) 80%, var(--text-main));
}

.player-name-dropdown-list {
  position: absolute;
  top: 100%; /* Position below the input field */
  left: 0;
  right: 0;
  background-color: var(--card-bg);
  border: 1px solid var(--border-color); /* Ensure correct border color */
  border-top: none;
  border-radius: 0 0 4px 4px;
  z-index: 2000;  /* Increased z-index substantially */
  max-height: 150px; 
  overflow-y: auto;
  display: none; 
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}
.player-name-dropdown-list.open {
  display: block;
}
.player-name-dropdown-item {
  padding: 0.6rem 0.8rem;
  cursor: pointer;
  color: var(--text-main);
  font-size: 0.95rem;
  transition: background-color 0.2s;
}
.player-name-dropdown-item:hover {
  background-color: color-mix(in srgb, var(--palette-cyan) 20%, var(--card-bg)); /* Light cyan highlight */
}

/* Warning message for minimums validation */
.warning-message {
  color: var(--palette-orange-primary); 
  font-size: 0.65rem;
  text-align: center;
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  height: 1.2em; 
  display: none; 
  font-weight: bold;
}

/* Rolled highlight animation */
.rolled-highlight {
  outline: 2px solid var(--palette-orange-primary); 
  box-shadow: 0 0 15px color-mix(in srgb, var(--palette-orange-primary) 70%, transparent); 
  animation: quickGlow 0.7s ease-out;
}
@keyframes quickGlow {
  0%, 100% { box-shadow: 0 0 5px color-mix(in srgb, var(--palette-orange-primary) 30%, transparent); }
  50% { box-shadow: 0 0 20px color-mix(in srgb, var(--palette-orange-primary) 80%, transparent); }
}

/* Role options section */
.role-options-section {
    border-top: 1px solid var(--border-color); 
    margin-top: 1rem; 
    padding-top: 1rem; 
    display: flex; 
    flex-direction: column; 
    gap: 0.5rem; 
}
.role-options-section h3 {
    font-size: 1rem; 
    margin-top: 0; 
    margin-bottom: 0.8rem; 
    color: var(--text-main); 
}
.options-panel label input[type="checkbox"] { /* Ensure this is scoped to options panel only if needed */
  margin-right: 0.5rem; 
}

/* Media Queries (adjust fixed px values if they clash with new fluid/variable approach) */
@media (max-width: 900px) {
  .main {
    flex-direction: column;
    gap: 1.2rem;
    align-items: stretch;
    max-width: 98vw;
  }
  .panel {
    max-width: 100%;
    min-width: 0;
  }
}
@media (max-width: 600px) {
  html {
    font-size: 15px;
  }
  .main {
    flex-direction: column;
    gap: 1rem;
    max-width: 100vw;
    padding: 0;
  }
  .panel {
    padding: 0.7rem 0.5rem;
    box-shadow: 0 1px 3px #0002;
  }
  .player-item {
    /* Updated grid template for small screens using rem and fr */
    grid-template-columns: 1.7rem 1.8fr 1fr 1.7rem;
  }
  .role {
    width: 100px;
    font-size: 0.95rem;
  }
  .role-icon {
    width: 28px;
    height: 28px;
  }
  .options-panel button,
  .options-panel label {
    font-size: 0.95rem;
    padding: 0.4em 0.6em;
  }
  .player-item input {
    font-size: 0.95rem;
    padding: 0.3em 0.5em;
    height: 2em;
  }
  .roll {
    width: 2.1rem;
    height: 2.1rem;
    font-size: 1.4rem;
  }
}
@media (max-width: 400px) {
  html {
    font-size: 13px;
  }
  .main {
    gap: 0.5rem;
  }
  .panel {
    padding: 0.5rem 0.2rem;
  }
  .player-item {
    /* Updated grid template for extra small screens using rem and fr */
    grid-template-columns: 1.3rem 1.7fr 1fr 1.3rem;
    gap: 0.2rem;
  }
  .remove, .roll {
    width: 1.7rem;
    height: 1.7rem;
    font-size: 1rem;
    padding: 0.2em 0.3em;
  }
  .role {
    width: 70px;
    font-size: 0.9rem;
  }
  .role-icon {
    width: 18px;
    height: 18px;
  }
  .options-panel button,
  .options-panel label {
    font-size: 0.9rem;
    padding: 0.3em 0.4em;
  }
  .player-item input {
    font-size: 0.9rem;
    padding: 0.2em 0.3em;
    height: 1.8em;
  }
  .roll {
    width: 1.7rem;
    height: 1.7rem;
    font-size: 1.1rem;
  }
}

/* Ensure player-item uses theme variables for background in light mode as well */
/* body:not(.dark-mode) .player-item {
    background: var(--card-bg);  -- Already handled by .player-item directly using var(--card-bg)
} */

/* Ensure player-name input uses theme vars in light mode */
/* body:not(.dark-mode) .player-item .player-name-wrapper input.player-name {
    border: 1px solid var(--input-border);
    background: var(--input-bg);
    color: var(--input-text); -- Already handled by common style
} */

/* Player name dropdown arrow in light mode */
/* body:not(.dark-mode) .player-name-dropdown-arrow {
  border: 1px solid var(--input-border);
  border-left: none;
  background: var(--input-bg);
  color: var(--icon-color); -- Already handled by common style
} */

/* Player Name Input with Dropdown */
.player-name-wrapper {
  position: relative; /* For dropdown positioning */
  display: flex; /* To align input and arrow button */
  width: 100%; /* Take full width of its grid cell */
}

.player-item .player-name-wrapper input.player-name {
  flex-grow: 1; /* Input takes most space */
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  /* Ensure it doesn't exceed the wrapper with box-sizing already on .player-name */
}

.player-name-dropdown-arrow {
  flex-shrink: 0;
  width: 30px;
  padding: 0.5rem;
  border: 1px solid #444;
  border-left: none;
  background: #1e1e1e;
  color: #fff;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  border-top-right-radius: .3rem;
  border-bottom-right-radius: .3rem;
  font-size: 0.8rem;
}

body:not(.dark-mode) .player-name-dropdown-arrow {
  border: 2px solid #0002;
  border-left: none;
  background: var(--btn-bg);
  color: var(--text-dark);
  border-top-right-radius: 6px;
  border-bottom-right-radius: 6px;
}

.player-name-dropdown-list {
  position: absolute;
  top: 100%; /* Position below the input field */
  left: 0;
  right: 0;
  background-color: var(--card-bg);
  border: 1px solid var(--border-color); /* Ensure correct border */
  border-top: none;
  border-radius: 0 0 4px 4px;
  z-index: 2000;  /* Increased z-index substantially */
  max-height: 150px; 
  overflow-y: auto;
  display: none; 
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

.player-name-dropdown-list.open {
  display: block;
}

.player-name-dropdown-item {
  padding: 0.6rem 0.8rem;
  cursor: pointer;
  color: var(--text-dark);
  font-size: 0.95rem;
}

.player-name-dropdown-item:hover {
  background-color: var(--btn-bg);
}

body:not(.dark-mode) .player-name-dropdown-item:hover {
  background-color: var(--yellow-deep);
}

/* Role-specific overlays */
.player-item.role-overlay-strategist {
  box-shadow: inset 0 0 0 1000px rgba(17, 215, 194, 0.8); /* Sky Blue */
}
.player-item.role-overlay-vanguard {
  box-shadow: inset 0 0 0 1000px rgba(186, 85, 211, 0.8);  /* Medium Orchid */
}
.player-item.role-overlay-duellist {
  box-shadow: inset 0 0 0 1000px rgba(255, 99, 71, 0.8);   /* Tomato */
}
.player-item.role-overlay-flex {
  box-shadow: inset 0 0 0 1000px rgba(60, 179, 113, 0.8);   /* Medium Sea Green */
}

.quick-populate-row .quick-pop-btn-container .remove-name-icon {
  margin-left: 5px;
  color: var(--text-color); /* Or a more prominent color like red */
  cursor: pointer;
  font-weight: bold;
  padding: 2px 5px; /* Add some padding to make it easier to click */
  border-radius: 3px;
  line-height: 1; /* Ensure consistent vertical alignment */
  font-size: 0.9em; /* Adjust size if needed */
}

.quick-populate-row .quick-pop-btn-container .remove-name-icon:hover {
  color: var(--accent-color-error); /* Example: use a specific error/warning color on hover */
  background-color: rgba(255, 0, 0, 0.1); /* Subtle background on hover */
}

/* Ensure the icon itself (if using Font Awesome) is styled if not inheriting properly */
.quick-populate-row .quick-pop-btn-container .remove-name-icon i.fa-times,
.quick-populate-row .quick-pop-btn-container .remove-name-icon i.fa-xmark {
  /* Add any specific font awesome icon styling here if needed */
  /* For example, ensuring its color is correctly inherited or set */
  /* color: inherit; */ /* if the parent color is what you want */
}

/* Roll All Button Container */
.roll-all-container {
  display: flex;
  justify-content: center;
}

/* Specific styles for the Roll All button to make it a primary CTA */
#rollAllBtn {
  padding: 0.8em 1.5em; /* Larger padding */
  font-size: 1.2rem;   /* Larger font size */
  background: var(--btn-primary-bg);
  color: var(--btn-primary-text);
  border-color: color-mix(in srgb, var(--btn-primary-bg) 80%, black);
  font-weight: bold; /* Make text bolder */
  width: auto; /* Auto width based on content */
  min-width: 100%;
  box-shadow: 0 2px 5px rgba(0,0,0,0.15); /* Slightly more prominent shadow */
  border-radius: 0.5rem;
}

#rollAllBtn:hover:not(.disabled) {
  background: color-mix(in srgb, var(--btn-primary-bg) 85%, black);
  transform: translateY(-2px); /* Slightly larger hover effect */
  box-shadow: 0 4px 8px rgba(0,0,0,0.2); /* Enhanced shadow on hover */
}

#rollAllBtn i.fas {
  margin-right: 0.6em; /* Adjust icon spacing if needed */
  font-size: 1.1em; /* Slightly larger icon relative to new font size */
}

.options-panel {
  flex: 0 1 auto;
} 